#include <stdio.h>
#include <stdlib.h>
#include <time.h>
#include <math.h>

#include "commonArray.h"


int func (double a[], int length1, double b[], int length2, double c[]);
int func (double a[], int length1, double b[], int length2, double c[])
{
    int i, j, k;
    double eps = 1e-7;
    
    i = 0;
    j = 0;
    k = 0;
    while((i < length1) && (j < length2))
    {
        if(fabs(b[j] - a[i]) > eps)
        {
            if (a[i] < b[j])
            {
                c[k] = a[i];
                i++;
            }
            else
            {
                c[k] = b[j];
                j++;
            }
            k++;
        }
        else
        {
            c[k] = b[j];
            k++;
            i++;
            j++;
        }
    }
    
    while(i < length1)
    {
        c[k] = a[i];
        k++;
        i++;
    }
    while(j < length2)
    {
        c[k] = b[j];
        k++;
        j++;
    }
    
    return k;
}


int main (int argc, char * argv[])
{
    double *array1, *array2, *array3;
    char *name1, *name2;
    int length1, length2, res;
    clock_t timer;
    
    if ( !( (argc == 5) && sscanf(argv[1], "%d", &length1) && sscanf(argv[3], "%d", &length2) ) )
    {
        printf("Usage %s n1 file1 n2 file2\n", argv[0]);
        return 1;
    }
//     printf("%d %d", length1, length2);
    
    array1 = (double *) malloc (length1 * sizeof(double));
    if (!array1)
    {
        printf("Memory allocation error\n");
        return 1;
    }
    
    array2 = (double *) malloc (length2 * sizeof(double));
    if (!array2)
    {
        printf("Memory allocation error\n");
        free(array1);
        return 1;
    }
    
    array3 = (double *) malloc ((length2 + length1) * sizeof(double));
    if (!array3)
    {
        printf("Memory allocation error\n");
        free(array1);
        return 1;
    }
    
    name1 = argv[2];
    name2 = argv[4];
    
    res = read_array (name1, array1, length1);
    if (res < 0)
    {
        switch(res)
        {
            case -1 :
                printf("Can't open file %s\n", name1);
                break;
            case -2 :
                printf("Read error\n");
                break;
            default:
                printf("Unknown error\n");
                break;
        }
        free(array1);
        free(array2);
        free(array3);
        return 1;
    }
#if 0
    else
    {
        init_array(array, n);
    }
#endif
    res = read_array (name2, array2, length2);
    if (res < 0)
    {
        switch(res)
        {
            case -1 :
                printf("Can't open file %s\n", name2);
                break;
            case -2 :
                printf("Read error\n");
                break;
            default:
                printf("Unknown error\n");
                break;
        }
        free(array1);
        free(array2);
        free(array3);
        return 1;
    }
#if 0
    else
    {
        init_array(array, n);
    }
#endif
    
    
    printf("First array:\n");
    print_array(array1, length1);
    printf("Second array:\n");
    print_array(array2, length2);

    timer = clock ();
    
    res = func(array1, length1, array2, length2, array3);
    printf("\nSolved.\n%d\n", res);
    
    timer = (clock() - timer)/CLOCKS_PER_SEC;
    
    print_array(array3, res);
    
    printf("Elapsed = %.2lf\n", (double) timer);
    
    
    free(array1);
    free(array2);
    free(array3);
    return 0;
}